package com.project.BookEcom;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.project.BookEcom.model.AuthenticationRequest;
import com.project.BookEcom.model.AuthenticationResponse;
import com.project.BookEcom.service.UserServiceImpl;
import com.project.BookEcom.utils.JwtUtils;



@RestController
public class AuthController {
	
	@Autowired 
	private AuthenticationManager authenticationManager;
	
	@Autowired
	private UserServiceImpl userService;
	
	@Autowired
	private JwtUtils jwtUtils;
	
	
	@GetMapping("/dashboard")
	private String testingToken() {
		return "Welcome to the Dashboard "+ SecurityContextHolder.getContext().getAuthentication().
				getName();
	}
	
//	@PostMapping("/subs")
//	private ResponseEntity<?> subscribeClient(@RequestBody AuthenticationRequest authenticationRequest){
//		String userName = authenticationRequest.getUsername();
//		String password = authenticationRequest.getPassword();
//		UserModel userModel = new UserModel();
//		userModel.setUserName(userName);
//		userModel.setPassword(password);
//		
//		try {
//			userRepo.save(userModel);
//		}catch (Exception e) {
//			return ResponseEntity.ok(new AuthenticationResponse("Error during client Subscription "+userName));
//		}
//		return ResponseEntity.ok(new AuthenticationResponse("Succesfull subscription of client "+userName));
//	}
	
	@PostMapping("/auth")
	private ResponseEntity<?> authenticateClient(@RequestBody AuthenticationRequest authenticationRequest){
		String username = authenticationRequest.getUsername();
		String password = authenticationRequest.getPassword();
		try {
			authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(username, password));
//			return ResponseEntity.ok(new AuthenticationResponse("Succesfull authentication of client "+username));
		}catch (Exception e) {
			return ResponseEntity.ok(new AuthenticationResponse("Error during client authentication"));
		}

		UserDetails loadedUser = userService.loadUserByUsername(username);
		String generatedToken = jwtUtils.generateToken(loadedUser);
		
		return ResponseEntity.ok(new AuthenticationResponse(generatedToken));
		
//		return ResponseEntity.ok(new AuthenticationResponse("Success"));
	}
}

